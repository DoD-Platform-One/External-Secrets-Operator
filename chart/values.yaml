domain: bigbang.dev

rbac:
  create: true
  servicebindings:
    create: true
  aggregateToView: true
  aggregateToEdit: true
 
serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Automounts the service account token in all containers of the pod
  automount: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- Extra Labels to add to the service account.
  extraLabels: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""
  
scopedNamespace: ""

scopedRBAC: false

istio:
  enabled: false
  hardened:
    enabled: false
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []
    #   - name: "allow-google"
    #     enabled: true
    #     spec:
    #       hosts:
    #         - google.com
    #       location: MESH_EXTERNAL
    #       ports:
    #         - number: 443
    #           protocol: TLS
    #           name: https
    #       resolution: DNS
    customAuthorizationPolicies: []
    # - name: "allow-nothing"
    #   enabled: true
    #   spec: {}
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT
  injection: disabled

networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  additionalPolicies: []

bbtests:
  enabled: false
  # This is all data for the testing harnesses and users shouldn't mess with it.  
  namespace: external-secrets
  scripts: 
    image: registry1.dso.mil/ironbank/big-bang/base:2.1.0   
  secretstore:
    name: external-secrets-test-store
  serviceaccount:
    name: external-secrets-external-secrets-script-sa
  secrets:
    testsecret:
      value: "this is a magic value"

waitJob:
  enabled: true  
  scripts:
    image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:v1.33.4
  permissions:
    apiGroups:
      - external-secrets.io
      - generators.external-secrets.io
      - ""
    resources:
      - acraccesstokens
      - clusterexternalsecrets
      - clustersecretstores
      - ecrauthorizationtokens
      - externalsecrets
      - fakes
      - gcraccesstokens
      - githubaccesstokens
      - passwords
      - pushsecrets
      - secretstores
      - vaultdynamicsecrets
      - webhooks
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - watch

env:
  EXTERNAL_SECRETS_NAMESPACE: "external-secrets"

clusterSecretStoreConfiguration:
  enabled: false
  clusterSecretStoreList:
    - name: ""
      namespace: ""
      labels: ""
      annotations: ""
      # -- define types of authentication: ##
      source: 
        # -- AWS secrets manager only - other services can be added later ##
        provider: aws 
        # -- Specify type of service, i.e., SecretsManager (default) ##
        service: SecretsManager 
        # -- Specify AWS region, i.e. us-gov-west-1 (default) ##
        region: "us-gov-west-1"
        auth:
          # -- Specify authType is required: identity, accesskey or serviceaccount ##
          authType: ""  
          # -- Name of the accessKeyID and secretAccessKey pair ##
          accessKeyName: "" 
          # -- Specify AWS Access Key ID file ##
          accessKeyID: ""
          # -- Specify AWS Secret Access Key file ##
          secretAccessKey: ""

externalSecretsConfiguration:
  enabled: false
  secretList:
    - name: ""
      namespace: ""
      refreshInterval: "1m"
      secrets:
        targetName: "" # -- target/destination secret name
          # -- target.creationPolicy default is Owner
        targetPolicy: "Owner"
        # -- This name allows reference by other objects.
        secretKeyName:
          # -- Specify key here
          key: ""
          # -- Key version
          version: ""
          # -- Specify the property of the secret, i.e. username, password
          property: ""
          # -- Optional" metadataPolicy for ExternalSecret, i.e. Fetch
          metadataPolicy: ""

upstream:
  
  nameOverride: "external-secrets"
  fullnameOverride: "external-secrets"
  namespaceOverride: "external-secrets"
  installCRDs: false
  
  deploymentAnnotations: {}
  
  webhook: 
    create: false
  
  rbac:
    create: false

  certController:
    create: false
          
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    enabled: true
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      cpu: 100m
      memory: 256Mi

  image:
    repository: registry1.dso.mil/ironbank/opensource/external-secrets/external-secrets
    pullPolicy: IfNotPresent
    # -- The image tag to use. The default is the chart appVersion.
    tag: "v0.19.2"
  
  imagePullSecrets:
  - name: private-registry
   