# Default to false, override in openshift-test-values.yaml
openshift: false

global:
  nodeSelector: {}
  tolerations: []
  topologySpreadConstraints: []
  affinity: {}
  compatibility:
    openshift:
      # -- Manages the securityContext properties to make them compatible with OpenShift.
      # Possible values:
      # auto - Apply configurations if it is detected that OpenShift is the target platform.
      # force - Always apply configurations.
      # disabled - No modification applied.
      adaptSecurityContext: auto

replicaCount: 1

bitwarden-sdk-server:
  enabled: false

# -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
revisionHistoryLimit: 10

image:
  repository: registry1.dso.mil/ironbank/opensource/external-secrets/external-secrets
  pullPolicy: IfNotPresent
  # -- The image tag to use. The default is the chart appVersion.
  tag: "v0.16.1"
  # -- The flavour of tag you want to use
  # There are different image flavours available, like distroless and ubi.
  # Please see GitHub release notes for image tags for these flavors.
  # By default, the distroless image is used.
  flavour: ""

# -- If set, install and upgrade CRDs through helm chart.
installCRDs: false

crds:
  # -- If true, create CRDs for Cluster External Secret.
  createClusterExternalSecret: true
  # -- If true, create CRDs for Cluster Secret Store.
  createClusterSecretStore: true
  # -- If true, create CRDs for Cluster Generator.
  createClusterGenerator: true
  # -- If true, create CRDs for Push Secret.
  createPushSecret: true
  annotations: {}
  conversion:
    # -- Conversion is disabled by default as we stopped supporting v1alpha1.
    enabled: false

imagePullSecrets:
- name: private-registry
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

# -- Additional labels added to all helm chart resources.
commonLabels: {}

# -- If true, external-secrets will perform leader election between instances to ensure no more
# than one instance of external-secrets operates at a time.
leaderElect: false

# -- If set external secrets will filter matching
# Secret Stores with the appropriate controller values.
controllerClass: ""

# -- If true external secrets will use recommended kubernetes
# annotations as prometheus metric labels.
extendedMetricLabels: false

# -- If set external secrets are only reconciled in the
# provided namespace
scopedNamespace: ""

# -- Must be used with scopedNamespace. If true, create scoped RBAC roles under the scoped namespace
# and implicitly disable cluster stores and cluster external secrets
scopedRBAC: false

# -- if true, the operator will process cluster external secret. Else, it will ignore them.
processClusterExternalSecret: true

# -- if true, the operator will process cluster store. Else, it will ignore them.
processClusterStore: true

# -- if true, the operator will process push secret. Else, it will ignore them.
processPushSecret: true

# -- Specifies whether an external secret operator deployment be created.
createOperator: true

# -- Specifies the number of concurrent ExternalSecret Reconciles external-secret executes at
# a time.
concurrent: 1
# -- Specifices Log Params to the External Secrets Operator
log:
  level: info
  timeEncoding: epoch
service:
  # -- Set the ip family policy to configure dual-stack see [Configure dual-stack](https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services)
  ipFamilyPolicy: ""
  # -- Sets the families that should be supported and the order in which they should be applied to ClusterIP as well. Can be IPv4 and/or IPv6.
  ipFamilies: []

serviceAccount:
  # -- Specifies whether a service account should be created.
  create: true
  # -- Automounts the service account token in all containers of the pod
  automount: true
  # -- Annotations to add to the service account.
  annotations: {}
  # -- Extra Labels to add to the service account.
  extraLabels: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template.
  name: ""

clusterSecretStoreConfiguration:
  enabled: false
  clusterSecretStoreList:
    - name: ""
      namespace: ""
      labels: ""
      annotations: ""
      # -- define types of authentication: ##
      source: 
        # -- AWS secrets manager only - other services can be added later ##
        provider: aws 
        # -- Specify type of service, i.e., SecretsManager (default) ##
        service: SecretsManager 
        # -- Specify AWS region, i.e. us-gov-west-1 (default) ##
        region: "us-gov-west-1"
        # -- Secret pull refresh interval.  Default is 1m.
        refreshInterval: "1m"        
        # -- Frequency to check for updates ##
        auth:
          # -- Specify authType is required: identity, accesskey or serviceaccount ##
          authType: ""  
          # -- Name of the accessKeyID and secretAccessKey pair ##
          accessKeyName: "" 
          # -- Specify AWS Access Key ID file ##
          accessKeyID: ""
          # -- Specify AWS Secret Access Key file ##
          secretAccessKey: ""   

externalSecretsConfiguration:
  enabled: false  # -- Enable or disable ExternalSecrets generation

  secretList:
    - name: secret-1  # -- Name of the ExternalSecret resource (must be unique per namespace)
      namespace: ""   # -- Kubernetes namespace to create the ExternalSecret in
      secrets:
        targetName: ""   # -- Name of the resulting Kubernetes Secret created by ExternalSecret
        targetPolicy: "" # -- Target creation policy: "Owner", "Merge", or "None". Default is "Owner"

        # -- Use this simplified block if only pulling a single key/property from the external secret
        secretKeyName:
          key: ""           # -- External secret key path
          version: ""       # -- (Optional) Version of the secret
          property: ""      # -- Specific property to extract from the secret (e.g., "username", "password")
          metadataPolicy: "" # -- (Optional) Metadata policy, e.g., "Fetch", to control sync behavior

        # -- Optional: Use this block if retrieving multiple key-value pairs from the same external secret
        data:
          - secretKey: ""   # -- Key name to store in the resulting Kubernetes Secret
            remoteRef:
              key: ""       # -- External secret key path
              property: ""  # -- Specific property to extract from the secret (e.g., "username", "password")
              version: ""   # -- (Optional) Version of the secret
          - secretKey: ""   # -- Another secret key to extract and store
            remoteRef:
              key: ""       # -- External secret key path (e.g., AWS Secrets Manager or SSM parameter path)
              property: ""  # -- Property to extract from the remote secret
              version: ""   # -- (Optional) Version of the secret

rbac:
# -- Specifies whether role and rolebinding resources should be created.
  create: true

  servicebindings:
    # -- Specifies whether a clusterrole to give servicebindings read access should be created.
    create: true

  # -- Specifies whether permissions are aggregated to the view ClusterRole
  aggregateToView: true

  # -- Specifies whether permissions are aggregated to the edit ClusterRole
  aggregateToEdit: true

## -- Extra environment variables to add to container.
extraEnv: []

## -- Map of extra arguments to pass to container.
extraArgs: {}

## -- Extra volumes to pass to pod.
extraVolumes: []

## -- Extra Kubernetes objects to deploy with the helm chart
extraObjects: []

## -- Extra volumes to mount to the container.
extraVolumeMounts: []

## -- Extra containers to add to the pod.
extraContainers: []

# -- Annotations to add to Deployment
deploymentAnnotations: {}

# -- Annotations to add to Pod
podAnnotations: {}

podLabels: {}

podSecurityContext:
  enabled: true
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  enabled: true
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

resources:
  requests:
    memory: 256Mi
    cpu: 100m
  limits:
    cpu: 100m
    memory: 256Mi

serviceMonitor:
  # -- Specifies whether to create a ServiceMonitor resource for collecting Prometheus metrics
  enabled: false

  # -- namespace where you want to install ServiceMonitors
  namespace: ""

  # -- Additional labels
  additionalLabels: {}

  # --  Interval to scrape metrics
  interval: 30s

  # -- Timeout if metrics can't be retrieved in given time interval
  scrapeTimeout: 25s

  # -- Let prometheus add an exported_ prefix to conflicting labels
  honorLabels: false

  # -- Metric relabel configs to apply to samples before ingestion. [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
  metricRelabelings: []
  # - action: replace
  #   regex: (.*)
  #   replacement: $1
  #   sourceLabels:
  #   - exported_namespace
  #   targetLabel: namespace

  # -- Relabel configs to apply to samples before ingestion. [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
  relabelings: []
  # - sourceLabels: [__meta_kubernetes_pod_node_name]
  #   separator: ;
  #   regex: ^(.*)$
  #   targetLabel: nodename
  #   replacement: $1
  #   action: replace

metrics:
  listen:
    port: 8080

  service:
    # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
    enabled: false

    # -- Metrics service port to scrape
    port: 8080

    # -- Additional service annotations
    annotations: {}

grafanaDashboard:
  # -- If true creates a Grafana dashboard.
  enabled: false

  # -- Label that ConfigMaps should have to be loaded as dashboards.
  sidecarLabel: "grafana_dashboard"

  # -- Label value that ConfigMaps should have to be loaded as dashboards.
  sidecarLabelValue: "1"

  # -- Annotations that ConfigMaps can have to get configured in Grafana,
  # See: sidecar.dashboards.folderAnnotation for specifying the dashboard folder.
  # https://github.com/grafana/helm-charts/tree/main/charts/grafana
  annotations: {}

nodeSelector: {}

tolerations: []

topologySpreadConstraints: []

affinity: {}

# -- Pod priority class name.
priorityClassName: ""

# -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# -- Run the controller on the host network
hostNetwork: false

webhook:
  # -- Specifies whether a webhook deployment be created.
  # The default behavior of ESO in bigbang at this time is to NOT deploy the validating webhook. There
  # is a bug that is still unresolved which causes the cert-controller and validating webhook to
  # come up unhealthy more often than not. Beware that enabling these options may result in an
  # unhealthy deployment.
  create: false
  # -- Specifices the time to check if the cert is valid
  certCheckInterval: "5m"
  # -- Specifices the lookaheadInterval for certificate validity
  lookaheadInterval: ""
  replicaCount: 1
  # -- Specifices Log Params to the Webhook
  log:
    level: info
    timeEncoding: epoch
  # -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
  revisionHistoryLimit: 10

  certDir: /tmp/certs
  # -- Specifies whether validating webhooks should be created with failurePolicy: Fail or Ignore
  failurePolicy: Fail
  # -- Specifies if webhook pod should use hostNetwork or not.
  hostNetwork: false
  image:
    repository: registry1.dso.mil/ironbank/opensource/external-secrets/external-secrets
    pullPolicy: IfNotPresent
    # -- The image tag to use. The default is the chart appVersion.
    tag: "v0.16.1"
    # -- The flavour of tag you want to use
    flavour: ""
  imagePullSecrets:
  - name: private-registry
  nameOverride: ""
  fullnameOverride: ""
  # -- The port the webhook will listen to
  port: 10250
  rbac:
    # -- Specifies whether role and rolebinding resources should be created.
    create: true
  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # -- Automounts the service account token in all containers of the pod
    automount: true
    # -- Annotations to add to the service account.
    annotations: {}
    # -- Extra Labels to add to the service account.
    extraLabels: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template.
    name: ""
  nodeSelector: {}

  certManager:
    # -- Enabling cert-manager support will disable the built in secret and
    # switch to using cert-manager (installed separately) to automatically issue
    # and renew the webhook certificate. This chart does not install
    # cert-manager for you, See https://cert-manager.io/docs/
    enabled: false
    # -- Automatically add the cert-manager.io/inject-ca-from annotation to the
    # webhooks and CRDs. As long as you have the cert-manager CA Injector
    # enabled, this will automatically setup your webhook's CA to the one used
    # by cert-manager. See https://cert-manager.io/docs/concepts/ca-injector
    addInjectorAnnotations: true
    cert:
      # -- Create a certificate resource within this chart. See
      # https://cert-manager.io/docs/usage/certificate/
      create: true
      # -- For the Certificate created by this chart, setup the issuer. See
      # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.IssuerSpec
      issuerRef:
        group: cert-manager.io
        kind: "Issuer"
        name: "my-issuer"
      # -- Set the requested duration (i.e. lifetime) of the Certificate. See
      # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec
      # One year by default.
      duration: "8760h"
      # -- How long before the currently issued certificate’s expiry
      # cert-manager should renew the certificate. See
      # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec
      # Note that renewBefore should be greater than .webhook.lookaheadInterval
      # since the webhook will check this far in advance that the certificate is
      # valid.
      renewBefore: ""
      # -- Add extra annotations to the Certificate resource.
      annotations: {}

  tolerations: []

  topologySpreadConstraints: []

  affinity: {}

    # -- Pod priority class name.
  priorityClassName: ""

  # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1

  metrics:
    listen:
      port: 8080

    service:
      # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
      enabled: false

      # -- Metrics service port to scrape
      port: 8080

      # -- Additional service annotations
      annotations: {}

  readinessProbe:
    # -- Address for readiness probe
    address: ""
    # -- ReadinessProbe port for kubelet
    port: 8081

    ## -- Extra environment variables to add to container.
  extraEnv: []

    ## -- Map of extra arguments to pass to container.
  extraArgs: {}

    ## -- Extra volumes to pass to pod.
  extraVolumes: []

    ## -- Extra volumes to mount to the container.
  extraVolumeMounts: []

    # -- Annotations to add to Secret
  secretAnnotations: {}

    # -- Annotations to add to Deployment
  deploymentAnnotations: {}

    # -- Annotations to add to Pod
  podAnnotations: {}

  podLabels: { external-secrets.io/component: webhook }

  podSecurityContext:
    enabled: true
      # fsGroup: 2000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    enabled: true
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      cpu: 100m
      memory: 256Mi

certController:
  # -- Specifies whether a certificate controller deployment be created.
  # The default behavior of ESO in bigbang at this time is to NOT create a cert controller. There
  # is a bug that is still unresolved which causes the cert-controller and validating webhook to
  # come up unhealthy more often than not. Beware that enabling these options may result in an
  # unhealthy deployment.
  create: false
  requeueInterval: "5m"
  replicaCount: 1
  # -- Specifices Log Params to the Certificate Controller
  log:
    level: info
    timeEncoding: epoch
  # -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
  revisionHistoryLimit: 10

  image:
    repository: registry1.dso.mil/ironbank/opensource/external-secrets/external-secrets
    pullPolicy: IfNotPresent
    tag: "v0.16.1"
    flavour: ""
  imagePullSecrets:
  - name: private-registry
  nameOverride: ""
  fullnameOverride: ""
  rbac:
    # -- Specifies whether role and rolebinding resources should be created.
    create: true
  serviceAccount:
    # -- Specifies whether a service account should be created.
    create: true
    # -- Automounts the service account token in all containers of the pod
    automount: true
    # -- Annotations to add to the service account.
    annotations: {}
    # -- Extra Labels to add to the service account.
    extraLabels: {}
    # -- The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template.
    name: ""
  nodeSelector: {}

  tolerations: []

  topologySpreadConstraints: []

  affinity: {}

  # -- Run the certController on the host network
  # Upstream bug reports related to the ongoing cert-controller/validating webhook issue indicate that
  # in some EKS and GCP deployments, using `hostNetwork: true` may resolve some issues.
  hostNetwork: false

    # -- Pod priority class name.
  priorityClassName: ""

  # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
    # maxUnavailable: 1

  metrics:
    listen:
      port: 8080

    service:
      # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
      enabled: false

      # -- Metrics service port to scrape
      port: 8080

      # -- Additional service annotations
      annotations: {}

  readinessProbe:
    # -- Address for readiness probe
    address: ""
    # -- ReadinessProbe port for kubelet
    port: 8081

    ## -- Extra environment variables to add to container.
  extraEnv: []

    ## -- Map of extra arguments to pass to container.
  extraArgs: {}

    ## -- Extra volumes to pass to pod.
  extraVolumes: []

    ## -- Extra volumes to mount to the container.
  extraVolumeMounts: []

    # -- Annotations to add to Deployment
  deploymentAnnotations: {}

    # -- Annotations to add to Pod
  podAnnotations: {}

  podLabels: {}

  podSecurityContext:
    enabled: true
      # fsGroup: 2000

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    enabled: true
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    seccompProfile:
      type: RuntimeDefault

  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      cpu: 100m
      memory: 256Mi

# -- Specifies `dnsPolicy` to deployment
dnsPolicy: ClusterFirst

# -- Specifies `dnsOptions` to deployment
dnsConfig: {}

# -- Any extra pod spec on the deployment
podSpecExtra: {}

# Big Bang Additions
domain: bigbang.dev
istio:
  enabled: false
  hardened:
    enabled: false
    outboundTrafficPolicyMode: "REGISTRY_ONLY"
    customServiceEntries: []
    #   - name: "allow-google"
    #     enabled: true
    #     spec:
    #       hosts:
    #         - google.com
    #       location: MESH_EXTERNAL
    #       ports:
    #         - number: 443
    #           protocol: TLS
    #           name: https
    #       resolution: DNS
    customAuthorizationPolicies: []
    # - name: "allow-nothing"
    #   enabled: true
    #   spec: {}
  mtls:
    # -- STRICT = Allow only mutual TLS traffic,
    # PERMISSIVE = Allow both plain text and mutual TLS traffic
    mode: STRICT
  injection: disabled

networkPolicies:
  enabled: false
  ingressLabels:
    app: istio-ingressgateway
    istio: ingressgateway
  additionalPolicies: []

bbtests:
  enabled: false
  # This is all data for the testing harnesses and users shouldn't mess with it.  
  namespace: external-secrets
  scripts: 
    image: registry1.dso.mil/ironbank/big-bang/base:2.1.0   
  secretstore:
    name: external-secrets-test-store
  serviceaccount:
    name: external-secrets-script-sa
  secrets:
    testsecret:
      value: "this is a magic value"

waitJob:
  enabled: true  
  scripts:
    image: registry1.dso.mil/ironbank/opensource/kubernetes/kubectl:v1.32.4
  permissions:
    apiGroups:
      - external-secrets.io
      - generators.external-secrets.io
      - ""
    resources:
      - acraccesstokens
      - clusterexternalsecrets
      - clustersecretstores
      - ecrauthorizationtokens
      - externalsecrets
      - fakes
      - gcraccesstokens
      - githubaccesstokens
      - passwords
      - pushsecrets
      - secretstores
      - vaultdynamicsecrets
      - webhooks
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - watch
env:
  EXTERNAL_SECRETS_NAMESPACE: "external-secrets"      

